version: '3'
services:
  core:
    image: jeguzzi/ros:armhf-kinetic-ros-dev
    network_mode: host
    command: roscore
    restart: always
    env_file:
      - ./ros.env
    volumes:
      - ./logs:/root/.ros/log:rw
  robot:
    build: .
    image: jeguzzi/thymioid
    network_mode: host
    privileged: true
    command: roslaunch --wait thymioid robot.launch odom_max_rate:=20
    restart: always
    env_file:
      - ./ros.env
    volumes:
      - ./logs:/root/.ros/log:rw
      - /dev:/dev
      - ./calibration:/root/catkin_ws/src/ros-aseba/thymio_driver/calibration:rw
    depends_on:
      - core
  camera:
    image: jeguzzi/thymioid
    network_mode: host
    privileged: true
    restart: always
    command: roslaunch --wait thymioid camera.launch image_width:=640 image_height:=480 rectify:=false
    env_file:
      - ./ros.env
    volumes:
      - ./logs:/root/.ros/log:rw
    depends_on:
      - core
  ups:
    image: jeguzzi/thymioid
    network_mode: host
    privileged: true
    command: roslaunch --wait thymioid ups.launch
    restart: always
    env_file:
      - ./ros.env
    volumes:
      - ./logs:/root/.ros/log:rw
    depends_on:
      - core
  ui:
    image: jeguzzi/thymioid
    network_mode: host
    privileged: true
    command: roslaunch --wait thymioid ui.launch
    restart: always
    env_file:
      - ./ros.env
    volumes:
      - ./logs:/root/.ros/log:rw
      - /run/network/ifstate.wlan0:/run/network/ifstate.wlan0
      - ./wlan:/wlan:rw
      - ./shutdown:/shutdown:rw
      - ./update:/update:rw
    depends_on:
      - robot
  demos:
    image: jeguzzi/thymioid
    network_mode: host
    privileged: true
    command: roslaunch --wait thymioid demo_menu.launch demos:=[ml,markers]
    restart: always
    env_file:
      - ./ros.env
    volumes:
      - ./logs:/root/.ros/log:rw
      - /var/run/docker.sock:/var/run/docker.sock
  joy_teleop:
    image: jeguzzi/thymioid
    network_mode: host
    privileged: true
    command: roslaunch --wait thymioid joy_teleop.launch
    restart: always
    env_file:
      - ./ros.env
    volumes:
      - ./logs:/root/.ros/log:rw
  notebook:
    image: jeguzzi/thymioid
    network_mode: host
    command: jupyter notebook --allow-root --NotebookApp.token='' --port=8888 --no-browser --notebook-dir=/notebook --ip=0.0.0.0
    env_file:
      - ./ros.env
    volumes:
      - ./logs:/root/.ros/log:rw
      - ./notebook:/notebook:rw
  portainer:
    command: --no-auth
    image: portainer/portainer:linux-arm
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - 9000:9000
    restart: always
  aseba:
    image: jeguzzi/thymioid
    command: /root/catkin_ws/devel/lib/aseba/asebaswitch "ser:device=/dev/ttyACM0"
    privileged: true
    # restart: none
    ports:
      - 33333:33333
